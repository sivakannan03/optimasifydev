//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PfizerEntity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class pfizerEntities : DbContext
    {
        public pfizerEntities()
            : base("name=pfizerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<vw_MeetingReminderReadstatus> vw_MeetingReminderReadstatus { get; set; }
        public virtual DbSet<GeneralMaster> GeneralMasters { get; set; }
        public virtual DbSet<EvaluationMaster> EvaluationMasters { get; set; }
        public virtual DbSet<StrategicPlanningMaster> StrategicPlanningMasters { get; set; }
        public virtual DbSet<TailoredExecutionMaster> TailoredExecutionMasters { get; set; }
        public virtual DbSet<QualificationMaster> QualificationMasters { get; set; }
        public virtual DbSet<CycleDefinitionMaster> CycleDefinitionMasters { get; set; }
        public virtual DbSet<CycleMaster> CycleMasters { get; set; }
        public virtual DbSet<QuestionMaster> QuestionMasters { get; set; }
        public virtual DbSet<SpecializationMaster> SpecializationMasters { get; set; }
        public virtual DbSet<SpecializationTeamlinkMaster> SpecializationTeamlinkMasters { get; set; }
        public virtual DbSet<TeamMaster> TeamMasters { get; set; }
        public virtual DbSet<HolidayGroupMaster> HolidayGroupMasters { get; set; }
        public virtual DbSet<RatingMaster> RatingMasters { get; set; }
        public virtual DbSet<RegionMaster> RegionMasters { get; set; }
        public virtual DbSet<AreaMaster> AreaMasters { get; set; }
        public virtual DbSet<NodeTypeMaster> NodeTypeMasters { get; set; }
        public virtual DbSet<HolidayMaster> HolidayMasters { get; set; }
        public virtual DbSet<TownClassMaster> TownClassMasters { get; set; }
        public virtual DbSet<ActivityMaster> ActivityMasters { get; set; }
        public virtual DbSet<CityMaster> CityMasters { get; set; }
        public virtual DbSet<DivisionMaster> DivisionMasters { get; set; }
        public virtual DbSet<RoleMaster> RoleMasters { get; set; }
        public virtual DbSet<TerritoryMaster> TerritoryMasters { get; set; }
        public virtual DbSet<DistrictMaster> DistrictMasters { get; set; }
        public virtual DbSet<FormMaster> FormMasters { get; set; }
        public virtual DbSet<MoleculeMaster> MoleculeMasters { get; set; }
        public virtual DbSet<OpinionPollView> OpinionPollViews { get; set; }
        public virtual DbSet<FAQS1View> FAQS1View { get; set; }
        public virtual DbSet<DesignationMaster> DesignationMasters { get; set; }
        public virtual DbSet<LocationMaster> LocationMasters { get; set; }
        public virtual DbSet<SettingMaster> SettingMasters { get; set; }
        public virtual DbSet<EmployeeMaster> EmployeeMasters { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Masters_Hospitalmaster_tb> Masters_Hospitalmaster_tb { get; set; }
        public virtual DbSet<Masters_Stockistmaster_Tb> Masters_Stockistmaster_Tb { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> LoginLock(string loginname)
        {
            var loginnameParameter = loginname != null ?
                new ObjectParameter("Loginname", loginname) :
                new ObjectParameter("Loginname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("LoginLock", loginnameParameter);
        }
    
        public virtual ObjectResult<GetQuestion_Result> GetQuestion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestion_Result>("GetQuestion");
        }
    
        public virtual ObjectResult<TimeSetting_Result> TimeSetting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimeSetting_Result>("TimeSetting");
        }
    
        public virtual ObjectResult<AuthenticateUser7_Result> AuthenticateUser7(string loginname, string password, Nullable<decimal> questionFKID, string answer)
        {
            var loginnameParameter = loginname != null ?
                new ObjectParameter("Loginname", loginname) :
                new ObjectParameter("Loginname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var questionFKIDParameter = questionFKID.HasValue ?
                new ObjectParameter("QuestionFKID", questionFKID) :
                new ObjectParameter("QuestionFKID", typeof(decimal));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AuthenticateUser7_Result>("AuthenticateUser7", loginnameParameter, passwordParameter, questionFKIDParameter, answerParameter);
        }
    
        public virtual ObjectResult<GetUsefulLinks_Result> GetUsefulLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsefulLinks_Result>("GetUsefulLinks");
        }
    
        public virtual ObjectResult<string> GetAlertsByXML(Nullable<int> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAlertsByXML", pKIDParameter);
        }
    
        public virtual ObjectResult<GetTopAlertsByXML_Result> GetTopAlertsByXML(Nullable<int> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTopAlertsByXML_Result>("GetTopAlertsByXML", pKIDParameter);
        }
    
        public virtual ObjectResult<buildInfoBank_Result1> buildInfoBank()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<buildInfoBank_Result1>("buildInfoBank");
        }
    
        public virtual ObjectResult<GetContentByXML_Result> GetContentByXML(Nullable<int> secFKID, string userDiv)
        {
            var secFKIDParameter = secFKID.HasValue ?
                new ObjectParameter("SecFKID", secFKID) :
                new ObjectParameter("SecFKID", typeof(int));
    
            var userDivParameter = userDiv != null ?
                new ObjectParameter("UserDiv", userDiv) :
                new ObjectParameter("UserDiv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContentByXML_Result>("GetContentByXML", secFKIDParameter, userDivParameter);
        }
    
        public virtual ObjectResult<GetNotificationByXML_Result> GetNotificationByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationByXML_Result>("GetNotificationByXML");
        }
    
        public virtual ObjectResult<GetContentBodyTextByXML_Result> GetContentBodyTextByXML(string pKID)
        {
            var pKIDParameter = pKID != null ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContentBodyTextByXML_Result>("GetContentBodyTextByXML", pKIDParameter);
        }
    
        public virtual int GetContentBodyTextByXML1(string pKID)
        {
            var pKIDParameter = pKID != null ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetContentBodyTextByXML1", pKIDParameter);
        }
    
        public virtual ObjectResult<GetNotificationTextByXML_Result> GetNotificationTextByXML(string pKID)
        {
            var pKIDParameter = pKID != null ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationTextByXML_Result>("GetNotificationTextByXML", pKIDParameter);
        }
    
        public virtual ObjectResult<GetAlertsTextByXML_Result1> GetAlertsTextByXML(string pKID)
        {
            var pKIDParameter = pKID != null ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlertsTextByXML_Result1>("GetAlertsTextByXML", pKIDParameter);
        }
    
        public virtual int UpdatReadAlert(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatReadAlert", pKIDParameter);
        }
    
        public virtual ObjectResult<usp_AuthenticateUser_Result> usp_AuthenticateUser(string loginname, string password, Nullable<decimal> questionFKID, string answer)
        {
            var loginnameParameter = loginname != null ?
                new ObjectParameter("Loginname", loginname) :
                new ObjectParameter("Loginname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var questionFKIDParameter = questionFKID.HasValue ?
                new ObjectParameter("QuestionFKID", questionFKID) :
                new ObjectParameter("QuestionFKID", typeof(decimal));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AuthenticateUser_Result>("usp_AuthenticateUser", loginnameParameter, passwordParameter, questionFKIDParameter, answerParameter);
        }
    
        public virtual ObjectResult<BuildMenu_Result1> BuildMenu(Nullable<decimal> roleFKID)
        {
            var roleFKIDParameter = roleFKID.HasValue ?
                new ObjectParameter("RoleFKID", roleFKID) :
                new ObjectParameter("RoleFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuildMenu_Result1>("BuildMenu", roleFKIDParameter);
        }
    
        public virtual int usp_AuthenticateUser1(string loginname, string password, Nullable<decimal> questionFKID, string answer)
        {
            var loginnameParameter = loginname != null ?
                new ObjectParameter("Loginname", loginname) :
                new ObjectParameter("Loginname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var questionFKIDParameter = questionFKID.HasValue ?
                new ObjectParameter("QuestionFKID", questionFKID) :
                new ObjectParameter("QuestionFKID", typeof(decimal));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AuthenticateUser1", loginnameParameter, passwordParameter, questionFKIDParameter, answerParameter);
        }
    
        public virtual ObjectResult<GetTopOneOpinionByXML_Result> GetTopOneOpinionByXML(Nullable<decimal> userFKID)
        {
            var userFKIDParameter = userFKID.HasValue ?
                new ObjectParameter("UserFKID", userFKID) :
                new ObjectParameter("UserFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTopOneOpinionByXML_Result>("GetTopOneOpinionByXML", userFKIDParameter);
        }
    
        public virtual int UpdateOpinionPollAnswer(Nullable<decimal> opFKID, Nullable<decimal> feedback, Nullable<decimal> userID)
        {
            var opFKIDParameter = opFKID.HasValue ?
                new ObjectParameter("OpFKID", opFKID) :
                new ObjectParameter("OpFKID", typeof(decimal));
    
            var feedbackParameter = feedback.HasValue ?
                new ObjectParameter("Feedback", feedback) :
                new ObjectParameter("Feedback", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOpinionPollAnswer", opFKIDParameter, feedbackParameter, userIDParameter);
        }
    
        public virtual int usp_AuthenticateUser2(string loginname, string password, Nullable<decimal> questionFKID, string answer)
        {
            var loginnameParameter = loginname != null ?
                new ObjectParameter("Loginname", loginname) :
                new ObjectParameter("Loginname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var questionFKIDParameter = questionFKID.HasValue ?
                new ObjectParameter("QuestionFKID", questionFKID) :
                new ObjectParameter("QuestionFKID", typeof(decimal));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AuthenticateUser2", loginnameParameter, passwordParameter, questionFKIDParameter, answerParameter);
        }
    
        public virtual ObjectResult<GetForgetPassword_Result> GetForgetPassword(string loginname, Nullable<decimal> questionFKID, string answer)
        {
            var loginnameParameter = loginname != null ?
                new ObjectParameter("Loginname", loginname) :
                new ObjectParameter("Loginname", typeof(string));
    
            var questionFKIDParameter = questionFKID.HasValue ?
                new ObjectParameter("QuestionFKID", questionFKID) :
                new ObjectParameter("QuestionFKID", typeof(decimal));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetForgetPassword_Result>("GetForgetPassword", loginnameParameter, questionFKIDParameter, answerParameter);
        }
    
        public virtual ObjectResult<GetPassword_Result> GetPassword(string loginId)
        {
            var loginIdParameter = loginId != null ?
                new ObjectParameter("LoginId", loginId) :
                new ObjectParameter("LoginId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPassword_Result>("GetPassword", loginIdParameter);
        }
    
        public virtual ObjectResult<USP_GET_EVALUATIONMASTER_Result> USP_GET_EVALUATIONMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_EVALUATIONMASTER_Result>("USP_GET_EVALUATIONMASTER");
        }
    
        public virtual ObjectResult<USP_GET_QUALIFICATIONMASTER_Result> USP_GET_QUALIFICATIONMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_QUALIFICATIONMASTER_Result>("USP_GET_QUALIFICATIONMASTER");
        }
    
        public virtual ObjectResult<USP_GET_STRATEGICPLANNINGMASTER_Result> USP_GET_STRATEGICPLANNINGMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_STRATEGICPLANNINGMASTER_Result>("USP_GET_STRATEGICPLANNINGMASTER");
        }
    
        public virtual ObjectResult<USP_GET_TAILOREDEXECUTIONMASTER_Result> USP_GET_TAILOREDEXECUTIONMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_TAILOREDEXECUTIONMASTER_Result>("USP_GET_TAILOREDEXECUTIONMASTER");
        }
    
        public virtual ObjectResult<USP_GET_CYCLE_DEFINITION_MASTER_Result> USP_GET_CYCLE_DEFINITION_MASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_CYCLE_DEFINITION_MASTER_Result>("USP_GET_CYCLE_DEFINITION_MASTER");
        }
    
        public virtual ObjectResult<USP_GET_CYCLE_SETTING_MASTER_Result> USP_GET_CYCLE_SETTING_MASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_CYCLE_SETTING_MASTER_Result>("USP_GET_CYCLE_SETTING_MASTER");
        }
    
        public virtual ObjectResult<USP_GET_MONTH_Result> USP_GET_MONTH()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_MONTH_Result>("USP_GET_MONTH");
        }
    
        public virtual ObjectResult<uspGetSettingMaster_Result1> uspGetSettingMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSettingMaster_Result1>("uspGetSettingMaster");
        }
    
        public virtual int EditSettingMaster(Nullable<decimal> pKID, string impactScreenName, string settingDescription, string settingType, string fromValue, string toValue, Nullable<bool> isActive, Nullable<int> modifiedBy, string code)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var impactScreenNameParameter = impactScreenName != null ?
                new ObjectParameter("ImpactScreenName", impactScreenName) :
                new ObjectParameter("ImpactScreenName", typeof(string));
    
            var settingDescriptionParameter = settingDescription != null ?
                new ObjectParameter("SettingDescription", settingDescription) :
                new ObjectParameter("SettingDescription", typeof(string));
    
            var settingTypeParameter = settingType != null ?
                new ObjectParameter("SettingType", settingType) :
                new ObjectParameter("SettingType", typeof(string));
    
            var fromValueParameter = fromValue != null ?
                new ObjectParameter("FromValue", fromValue) :
                new ObjectParameter("FromValue", typeof(string));
    
            var toValueParameter = toValue != null ?
                new ObjectParameter("ToValue", toValue) :
                new ObjectParameter("ToValue", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSettingMaster", pKIDParameter, impactScreenNameParameter, settingDescriptionParameter, settingTypeParameter, fromValueParameter, toValueParameter, isActiveParameter, modifiedByParameter, codeParameter);
        }
    
        public virtual int AddSettingMaster(string impactScreenName, string settingDescription, string settingType, string fromValue, string toValue, Nullable<bool> isActive, Nullable<int> createdBy, string code)
        {
            var impactScreenNameParameter = impactScreenName != null ?
                new ObjectParameter("ImpactScreenName", impactScreenName) :
                new ObjectParameter("ImpactScreenName", typeof(string));
    
            var settingDescriptionParameter = settingDescription != null ?
                new ObjectParameter("SettingDescription", settingDescription) :
                new ObjectParameter("SettingDescription", typeof(string));
    
            var settingTypeParameter = settingType != null ?
                new ObjectParameter("SettingType", settingType) :
                new ObjectParameter("SettingType", typeof(string));
    
            var fromValueParameter = fromValue != null ?
                new ObjectParameter("FromValue", fromValue) :
                new ObjectParameter("FromValue", typeof(string));
    
            var toValueParameter = toValue != null ?
                new ObjectParameter("ToValue", toValue) :
                new ObjectParameter("ToValue", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSettingMaster", impactScreenNameParameter, settingDescriptionParameter, settingTypeParameter, fromValueParameter, toValueParameter, isActiveParameter, createdByParameter, codeParameter);
        }
    
        public virtual int DeleteSettingMaster(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSettingMaster", pKIDParameter);
        }
    
        public virtual ObjectResult<GetUserDefault_Result> GetUserDefault()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDefault_Result>("GetUserDefault");
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddUserMaster(Nullable<decimal> empFKID, string roleFKID, string loginname, string password, string isActive, Nullable<decimal> createdBy, string xmlStr)
        {
            var empFKIDParameter = empFKID.HasValue ?
                new ObjectParameter("EmpFKID", empFKID) :
                new ObjectParameter("EmpFKID", typeof(decimal));
    
            var roleFKIDParameter = roleFKID != null ?
                new ObjectParameter("RoleFKID", roleFKID) :
                new ObjectParameter("RoleFKID", typeof(string));
    
            var loginnameParameter = loginname != null ?
                new ObjectParameter("Loginname", loginname) :
                new ObjectParameter("Loginname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddUserMaster", empFKIDParameter, roleFKIDParameter, loginnameParameter, passwordParameter, isActiveParameter, createdByParameter, xmlStrParameter);
        }
    
        public virtual ObjectResult<USP_GET_ACTIVITY_MASTER_Result> USP_GET_ACTIVITY_MASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ACTIVITY_MASTER_Result>("USP_GET_ACTIVITY_MASTER");
        }
    
        public virtual int USP_DELETE_ACTIVITYMASTER(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DELETE_ACTIVITYMASTER", pKIDParameter);
        }
    
        public virtual int USP_DELETE_UNLOCKUSERDETAILS(string getPKID)
        {
            var getPKIDParameter = getPKID != null ?
                new ObjectParameter("GetPKID", getPKID) :
                new ObjectParameter("GetPKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DELETE_UNLOCKUSERDETAILS", getPKIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_NODETYPE_MASTER_Result> USP_GET_NODETYPE_MASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_NODETYPE_MASTER_Result>("USP_GET_NODETYPE_MASTER");
        }
    
        public virtual ObjectResult<USP_GET_NODETYPEMASTER_Result> USP_GET_NODETYPEMASTER(Nullable<int> pkId)
        {
            var pkIdParameter = pkId.HasValue ?
                new ObjectParameter("PkId", pkId) :
                new ObjectParameter("PkId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_NODETYPEMASTER_Result>("USP_GET_NODETYPEMASTER", pkIdParameter);
        }
    
        public virtual ObjectResult<USP_GET_TEAM_MASTER_Result> USP_GET_TEAM_MASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_TEAM_MASTER_Result>("USP_GET_TEAM_MASTER");
        }
    
        public virtual ObjectResult<USP_GET_TEAMMASTER_Result> USP_GET_TEAMMASTER(Nullable<int> pkId)
        {
            var pkIdParameter = pkId.HasValue ?
                new ObjectParameter("PkId", pkId) :
                new ObjectParameter("PkId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_TEAMMASTER_Result>("USP_GET_TEAMMASTER", pkIdParameter);
        }
    
        public virtual ObjectResult<USP_GETLOGDEAILS_Result> USP_GETLOGDEAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GETLOGDEAILS_Result>("USP_GETLOGDEAILS");
        }
    
        public virtual int USP_UPDATE_NODETYPEMASTER(string oper, string nodetypeFKID, string teamFKID, string activityName, Nullable<bool> defaultflag, Nullable<bool> specialflag, Nullable<bool> fieldwork, string activityFKID, string isActive, string createdBy, string createdDate, string modifiedBy, string modifiedDate)
        {
            var operParameter = oper != null ?
                new ObjectParameter("oper", oper) :
                new ObjectParameter("oper", typeof(string));
    
            var nodetypeFKIDParameter = nodetypeFKID != null ?
                new ObjectParameter("NodetypeFKID", nodetypeFKID) :
                new ObjectParameter("NodetypeFKID", typeof(string));
    
            var teamFKIDParameter = teamFKID != null ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(string));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var defaultflagParameter = defaultflag.HasValue ?
                new ObjectParameter("Defaultflag", defaultflag) :
                new ObjectParameter("Defaultflag", typeof(bool));
    
            var specialflagParameter = specialflag.HasValue ?
                new ObjectParameter("Specialflag", specialflag) :
                new ObjectParameter("Specialflag", typeof(bool));
    
            var fieldworkParameter = fieldwork.HasValue ?
                new ObjectParameter("Fieldwork", fieldwork) :
                new ObjectParameter("Fieldwork", typeof(bool));
    
            var activityFKIDParameter = activityFKID != null ?
                new ObjectParameter("ActivityFKID", activityFKID) :
                new ObjectParameter("ActivityFKID", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var modifiedDateParameter = modifiedDate != null ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UPDATE_NODETYPEMASTER", operParameter, nodetypeFKIDParameter, teamFKIDParameter, activityNameParameter, defaultflagParameter, specialflagParameter, fieldworkParameter, activityFKIDParameter, isActiveParameter, createdByParameter, createdDateParameter, modifiedByParameter, modifiedDateParameter);
        }
    
        public virtual ObjectResult<usp_GetSalesHierarchy_Result> usp_GetSalesHierarchy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSalesHierarchy_Result>("usp_GetSalesHierarchy");
        }
    
        public virtual ObjectResult<GetSplTeamByXml_Result> GetSplTeamByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSplTeamByXml_Result>("GetSplTeamByXml");
        }
    
        public virtual int AddSpecializationTeamlinkMaster(string specialization, string xml, Nullable<bool> isActive, Nullable<decimal> createdBy)
        {
            var specializationParameter = specialization != null ?
                new ObjectParameter("Specialization", specialization) :
                new ObjectParameter("Specialization", typeof(string));
    
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSpecializationTeamlinkMaster", specializationParameter, xmlParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int DeleteSpecializationTeamlinkMaster(Nullable<decimal> pKID, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSpecializationTeamlinkMaster", pKIDParameter, modifiedByParameter);
        }
    
        public virtual int EditSpecializationMaster2(Nullable<decimal> pKID, string xml, string specialization, Nullable<bool> isActive, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            var specializationParameter = specialization != null ?
                new ObjectParameter("Specialization", specialization) :
                new ObjectParameter("Specialization", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSpecializationMaster2", pKIDParameter, xmlParameter, specializationParameter, isActiveParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<usp_GetRBMMaster_Result> usp_GetRBMMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetRBMMaster_Result>("usp_GetRBMMaster");
        }
    
        public virtual ObjectResult<GetFTMName_Result> GetFTMName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFTMName_Result>("GetFTMName");
        }
    
        public virtual ObjectResult<GetRBMName_Result> GetRBMName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRBMName_Result>("GetRBMName");
        }
    
        public virtual int AddRBMFTMLinkMaster(Nullable<int> rBMFKID, Nullable<int> fTMFKID)
        {
            var rBMFKIDParameter = rBMFKID.HasValue ?
                new ObjectParameter("RBMFKID", rBMFKID) :
                new ObjectParameter("RBMFKID", typeof(int));
    
            var fTMFKIDParameter = fTMFKID.HasValue ?
                new ObjectParameter("FTMFKID", fTMFKID) :
                new ObjectParameter("FTMFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRBMFTMLinkMaster", rBMFKIDParameter, fTMFKIDParameter);
        }
    
        public virtual int DeleteRBMFTMLinkMaster(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRBMFTMLinkMaster", pKIDParameter);
        }
    
        public virtual int EditRBMFTMLinkMaster(Nullable<decimal> pKID, Nullable<int> rBMFKID, Nullable<int> fTMFKID, Nullable<bool> isActive)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var rBMFKIDParameter = rBMFKID.HasValue ?
                new ObjectParameter("RBMFKID", rBMFKID) :
                new ObjectParameter("RBMFKID", typeof(int));
    
            var fTMFKIDParameter = fTMFKID.HasValue ?
                new ObjectParameter("FTMFKID", fTMFKID) :
                new ObjectParameter("FTMFKID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditRBMFTMLinkMaster", pKIDParameter, rBMFKIDParameter, fTMFKIDParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<uspGetInputMaster_Result> uspGetInputMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetInputMaster_Result>("uspGetInputMaster");
        }
    
        public virtual ObjectResult<uspGetInputType_Result> uspGetInputType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetInputType_Result>("uspGetInputType");
        }
    
        public virtual int AddiNPUTMaster(Nullable<decimal> inputTypeFKID, string inputName, string iBISCode, Nullable<decimal> usrFKID)
        {
            var inputTypeFKIDParameter = inputTypeFKID.HasValue ?
                new ObjectParameter("InputTypeFKID", inputTypeFKID) :
                new ObjectParameter("InputTypeFKID", typeof(decimal));
    
            var inputNameParameter = inputName != null ?
                new ObjectParameter("InputName", inputName) :
                new ObjectParameter("InputName", typeof(string));
    
            var iBISCodeParameter = iBISCode != null ?
                new ObjectParameter("IBISCode", iBISCode) :
                new ObjectParameter("IBISCode", typeof(string));
    
            var usrFKIDParameter = usrFKID.HasValue ?
                new ObjectParameter("UsrFKID", usrFKID) :
                new ObjectParameter("UsrFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddiNPUTMaster", inputTypeFKIDParameter, inputNameParameter, iBISCodeParameter, usrFKIDParameter);
        }
    
        public virtual int DeleteINPUTMaster(Nullable<decimal> pKID, Nullable<decimal> usrFKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var usrFKIDParameter = usrFKID.HasValue ?
                new ObjectParameter("UsrFKID", usrFKID) :
                new ObjectParameter("UsrFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteINPUTMaster", pKIDParameter, usrFKIDParameter);
        }
    
        public virtual int EditINPUTMaster(Nullable<decimal> pKID, Nullable<decimal> inputTypeFKID, string inputName, string iBISCode, Nullable<int> status, Nullable<decimal> usrFKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var inputTypeFKIDParameter = inputTypeFKID.HasValue ?
                new ObjectParameter("InputTypeFKID", inputTypeFKID) :
                new ObjectParameter("InputTypeFKID", typeof(decimal));
    
            var inputNameParameter = inputName != null ?
                new ObjectParameter("InputName", inputName) :
                new ObjectParameter("InputName", typeof(string));
    
            var iBISCodeParameter = iBISCode != null ?
                new ObjectParameter("IBISCode", iBISCode) :
                new ObjectParameter("IBISCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var usrFKIDParameter = usrFKID.HasValue ?
                new ObjectParameter("UsrFKID", usrFKID) :
                new ObjectParameter("UsrFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditINPUTMaster", pKIDParameter, inputTypeFKIDParameter, inputNameParameter, iBISCodeParameter, statusParameter, usrFKIDParameter);
        }
    
        public virtual ObjectResult<GetInputMasterbyID_Result> GetInputMasterbyID(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInputMasterbyID_Result>("GetInputMasterbyID", pKIDParameter);
        }
    
        public virtual ObjectResult<GetEmployeeCreateUserMasterByXml_Result> GetEmployeeCreateUserMasterByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeCreateUserMasterByXml_Result>("GetEmployeeCreateUserMasterByXml");
        }
    
        public virtual ObjectResult<GetUserSelectedRoles_Result> GetUserSelectedRoles(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserSelectedRoles_Result>("GetUserSelectedRoles", pKIDParameter);
        }
    
        public virtual ObjectResult<GetRoles_Result1> GetRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoles_Result1>("GetRoles");
        }
    
        public virtual ObjectResult<GetUserQuestionMaster_Result> GetUserQuestionMaster(Nullable<decimal> userFKID)
        {
            var userFKIDParameter = userFKID.HasValue ?
                new ObjectParameter("UserFKID", userFKID) :
                new ObjectParameter("UserFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserQuestionMaster_Result>("GetUserQuestionMaster", userFKIDParameter);
        }
    
        public virtual ObjectResult<GetHolidayGroupTerritoryLinkmasterByXml_Result> GetHolidayGroupTerritoryLinkmasterByXml(Nullable<decimal> holidaygroupFKID)
        {
            var holidaygroupFKIDParameter = holidaygroupFKID.HasValue ?
                new ObjectParameter("HolidaygroupFKID", holidaygroupFKID) :
                new ObjectParameter("HolidaygroupFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHolidayGroupTerritoryLinkmasterByXml_Result>("GetHolidayGroupTerritoryLinkmasterByXml", holidaygroupFKIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_BRICKMASTER_Result> USP_GET_BRICKMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_BRICKMASTER_Result>("USP_GET_BRICKMASTER");
        }
    
        public virtual ObjectResult<USP_GET_LOCALITY_MASTER_Result> USP_GET_LOCALITY_MASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_LOCALITY_MASTER_Result>("USP_GET_LOCALITY_MASTER");
        }
    
        public virtual ObjectResult<USP_GET_LOCALITYMASTER_Result> USP_GET_LOCALITYMASTER(Nullable<int> pkId)
        {
            var pkIdParameter = pkId.HasValue ?
                new ObjectParameter("PkId", pkId) :
                new ObjectParameter("PkId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_LOCALITYMASTER_Result>("USP_GET_LOCALITYMASTER", pkIdParameter);
        }
    
        public virtual ObjectResult<USP_GET_MU_HOLIDAYMASTER_Result> USP_GET_MU_HOLIDAYMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_MU_HOLIDAYMASTER_Result>("USP_GET_MU_HOLIDAYMASTER");
        }
    
        public virtual ObjectResult<USP_GET_MU_NODETYPEMASTER_Result> USP_GET_MU_NODETYPEMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_MU_NODETYPEMASTER_Result>("USP_GET_MU_NODETYPEMASTER");
        }
    
        public virtual ObjectResult<USP_GET_MU_TEAMMASTER_Result> USP_GET_MU_TEAMMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_MU_TEAMMASTER_Result>("USP_GET_MU_TEAMMASTER");
        }
    
        public virtual ObjectResult<USP_GET_PROD_NODETYPEMASTER_Result> USP_GET_PROD_NODETYPEMASTER(Nullable<int> pkId)
        {
            var pkIdParameter = pkId.HasValue ?
                new ObjectParameter("PkId", pkId) :
                new ObjectParameter("PkId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PROD_NODETYPEMASTER_Result>("USP_GET_PROD_NODETYPEMASTER", pkIdParameter);
        }
    
        public virtual ObjectResult<USP_GET_PROD_TEAMMASTER_Result> USP_GET_PROD_TEAMMASTER(Nullable<int> pkId)
        {
            var pkIdParameter = pkId.HasValue ?
                new ObjectParameter("PkId", pkId) :
                new ObjectParameter("PkId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PROD_TEAMMASTER_Result>("USP_GET_PROD_TEAMMASTER", pkIdParameter);
        }
    
        public virtual ObjectResult<USP_GET_PRODUCTMASTER_Result> USP_GET_PRODUCTMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_PRODUCTMASTER_Result>("USP_GET_PRODUCTMASTER");
        }
    
        public virtual ObjectResult<USP_GET_ROLEMASTER_Result> USP_GET_ROLEMASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ROLEMASTER_Result>("USP_GET_ROLEMASTER");
        }
    
        public virtual ObjectResult<USP_GET_TERRITORY_MASTER_Result> USP_GET_TERRITORY_MASTER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_TERRITORY_MASTER_Result>("USP_GET_TERRITORY_MASTER");
        }
    
        public virtual int USP_UPDATE_TERRITORYMASTER(string oper, string localityFKID, string pKID, string divFKID, string terCode, string terName, string townclassFKID, string isActive, string createdBy, string modifiedBy)
        {
            var operParameter = oper != null ?
                new ObjectParameter("oper", oper) :
                new ObjectParameter("oper", typeof(string));
    
            var localityFKIDParameter = localityFKID != null ?
                new ObjectParameter("LocalityFKID", localityFKID) :
                new ObjectParameter("LocalityFKID", typeof(string));
    
            var pKIDParameter = pKID != null ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(string));
    
            var divFKIDParameter = divFKID != null ?
                new ObjectParameter("DivFKID", divFKID) :
                new ObjectParameter("DivFKID", typeof(string));
    
            var terCodeParameter = terCode != null ?
                new ObjectParameter("TerCode", terCode) :
                new ObjectParameter("TerCode", typeof(string));
    
            var terNameParameter = terName != null ?
                new ObjectParameter("TerName", terName) :
                new ObjectParameter("TerName", typeof(string));
    
            var townclassFKIDParameter = townclassFKID != null ?
                new ObjectParameter("TownclassFKID", townclassFKID) :
                new ObjectParameter("TownclassFKID", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UPDATE_TERRITORYMASTER", operParameter, localityFKIDParameter, pKIDParameter, divFKIDParameter, terCodeParameter, terNameParameter, townclassFKIDParameter, isActiveParameter, createdByParameter, modifiedByParameter);
        }
    
        public virtual int AddHolidayMaster(string holidayDescription, string displayName, Nullable<System.DateTime> holidayDate, Nullable<bool> isActive, Nullable<decimal> createdBy)
        {
            var holidayDescriptionParameter = holidayDescription != null ?
                new ObjectParameter("HolidayDescription", holidayDescription) :
                new ObjectParameter("HolidayDescription", typeof(string));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("DisplayName", displayName) :
                new ObjectParameter("DisplayName", typeof(string));
    
            var holidayDateParameter = holidayDate.HasValue ?
                new ObjectParameter("HolidayDate", holidayDate) :
                new ObjectParameter("HolidayDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHolidayMaster", holidayDescriptionParameter, displayNameParameter, holidayDateParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int DeleteTerritoryMaster(Nullable<decimal> pKID, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTerritoryMaster", pKIDParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<GetAllCityByTerritory_Result> GetAllCityByTerritory(Nullable<decimal> pSOFKID)
        {
            var pSOFKIDParameter = pSOFKID.HasValue ?
                new ObjectParameter("PSOFKID", pSOFKID) :
                new ObjectParameter("PSOFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCityByTerritory_Result>("GetAllCityByTerritory", pSOFKIDParameter);
        }
    
        public virtual ObjectResult<GetAllMetisProductName_Result> GetAllMetisProductName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMetisProductName_Result>("GetAllMetisProductName");
        }
    
        public virtual ObjectResult<Nullable<int>> GetGencodeCount(string genCode, Nullable<int> genFKID)
        {
            var genCodeParameter = genCode != null ?
                new ObjectParameter("GenCode", genCode) :
                new ObjectParameter("GenCode", typeof(string));
    
            var genFKIDParameter = genFKID.HasValue ?
                new ObjectParameter("GenFKID", genFKID) :
                new ObjectParameter("GenFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetGencodeCount", genCodeParameter, genFKIDParameter);
        }
    
        public virtual ObjectResult<GetProductNameByXml_Result> GetProductNameByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductNameByXml_Result>("GetProductNameByXml");
        }
    
        public virtual ObjectResult<GetSettingMasterTeamWise_Result> GetSettingMasterTeamWise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSettingMasterTeamWise_Result>("GetSettingMasterTeamWise");
        }
    
        public virtual int AddGeneralMaster(Nullable<decimal> generalFKID, string genCode, string genName, Nullable<bool> isActive, Nullable<decimal> createdBy)
        {
            var generalFKIDParameter = generalFKID.HasValue ?
                new ObjectParameter("GeneralFKID", generalFKID) :
                new ObjectParameter("GeneralFKID", typeof(decimal));
    
            var genCodeParameter = genCode != null ?
                new ObjectParameter("GenCode", genCode) :
                new ObjectParameter("GenCode", typeof(string));
    
            var genNameParameter = genName != null ?
                new ObjectParameter("GenName", genName) :
                new ObjectParameter("GenName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGeneralMaster", generalFKIDParameter, genCodeParameter, genNameParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int AddInfoCategory(string categoryDesc, Nullable<decimal> parentFKID, string isActive, Nullable<decimal> createdBy)
        {
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("CategoryDesc", categoryDesc) :
                new ObjectParameter("CategoryDesc", typeof(string));
    
            var parentFKIDParameter = parentFKID.HasValue ?
                new ObjectParameter("ParentFKID", parentFKID) :
                new ObjectParameter("ParentFKID", typeof(decimal));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddInfoCategory", categoryDescParameter, parentFKIDParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int AddNotification1(string notification, Nullable<System.DateTime> expiryDate, Nullable<decimal> createdBy)
        {
            var notificationParameter = notification != null ?
                new ObjectParameter("Notification", notification) :
                new ObjectParameter("Notification", typeof(string));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNotification1", notificationParameter, expiryDateParameter, createdByParameter);
        }
    
        public virtual int AddProductMoleculeLinkMaster(Nullable<decimal> productFKID, string xmlMoleculeFKID, Nullable<int> createdBy)
        {
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(decimal));
    
            var xmlMoleculeFKIDParameter = xmlMoleculeFKID != null ?
                new ObjectParameter("xmlMoleculeFKID", xmlMoleculeFKID) :
                new ObjectParameter("xmlMoleculeFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProductMoleculeLinkMaster", productFKIDParameter, xmlMoleculeFKIDParameter, createdByParameter);
        }
    
        public virtual int DeleteGeneralMaster(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGeneralMaster", pKIDParameter);
        }
    
        public virtual int DeleteInfoCategory(Nullable<decimal> pKID, string isActive, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteInfoCategory", pKIDParameter, isActiveParameter, modifiedByParameter);
        }
    
        public virtual int DeleteMoleculeProductMaster(Nullable<decimal> productFKID, Nullable<decimal> moleculeFKID)
        {
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(decimal));
    
            var moleculeFKIDParameter = moleculeFKID.HasValue ?
                new ObjectParameter("MoleculeFKID", moleculeFKID) :
                new ObjectParameter("MoleculeFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMoleculeProductMaster", productFKIDParameter, moleculeFKIDParameter);
        }
    
        public virtual int DeleteNotification(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteNotification", pKIDParameter);
        }
    
        public virtual int EditGeneralMaster(Nullable<decimal> pKID, Nullable<decimal> generalFKID, string genCode, string genName, Nullable<bool> isActive, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var generalFKIDParameter = generalFKID.HasValue ?
                new ObjectParameter("GeneralFKID", generalFKID) :
                new ObjectParameter("GeneralFKID", typeof(decimal));
    
            var genCodeParameter = genCode != null ?
                new ObjectParameter("GenCode", genCode) :
                new ObjectParameter("GenCode", typeof(string));
    
            var genNameParameter = genName != null ?
                new ObjectParameter("GenName", genName) :
                new ObjectParameter("GenName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditGeneralMaster", pKIDParameter, generalFKIDParameter, genCodeParameter, genNameParameter, isActiveParameter, modifiedByParameter);
        }
    
        public virtual int EditInfoCategory(Nullable<decimal> pKID, string categoryDesc, Nullable<decimal> parentFKID, string isActive, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("CategoryDesc", categoryDesc) :
                new ObjectParameter("CategoryDesc", typeof(string));
    
            var parentFKIDParameter = parentFKID.HasValue ?
                new ObjectParameter("ParentFKID", parentFKID) :
                new ObjectParameter("ParentFKID", typeof(decimal));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditInfoCategory", pKIDParameter, categoryDescParameter, parentFKIDParameter, isActiveParameter, modifiedByParameter);
        }
    
        public virtual int EditMoleculetest1(Nullable<int> moleculeFKID, Nullable<decimal> productFKID, string xmlMoleculeFKID, Nullable<int> createdBy, Nullable<int> isActive)
        {
            var moleculeFKIDParameter = moleculeFKID.HasValue ?
                new ObjectParameter("MoleculeFKID", moleculeFKID) :
                new ObjectParameter("MoleculeFKID", typeof(int));
    
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(decimal));
    
            var xmlMoleculeFKIDParameter = xmlMoleculeFKID != null ?
                new ObjectParameter("xmlMoleculeFKID", xmlMoleculeFKID) :
                new ObjectParameter("xmlMoleculeFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditMoleculetest1", moleculeFKIDParameter, productFKIDParameter, xmlMoleculeFKIDParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int EditNotification(Nullable<decimal> pKID, string notification, Nullable<System.DateTime> expiryDate, Nullable<bool> isActive, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var notificationParameter = notification != null ?
                new ObjectParameter("Notification", notification) :
                new ObjectParameter("Notification", typeof(string));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditNotification", pKIDParameter, notificationParameter, expiryDateParameter, isActiveParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<GetFormMaster_Result> GetFormMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFormMaster_Result>("GetFormMaster");
        }
    
        public virtual ObjectResult<GetInfoCategory_Result> GetInfoCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInfoCategory_Result>("GetInfoCategory");
        }
    
        public virtual ObjectResult<GetMoleculeforProductByXML_Result> GetMoleculeforProductByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMoleculeforProductByXML_Result>("GetMoleculeforProductByXML");
        }
    
        public virtual ObjectResult<GetMoleculeMaster_Result> GetMoleculeMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMoleculeMaster_Result>("GetMoleculeMaster");
        }
    
        public virtual ObjectResult<GetNotification_Result> GetNotification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotification_Result>("GetNotification");
        }
    
        public virtual ObjectResult<GetProductType_Result> GetProductType(string genFKID)
        {
            var genFKIDParameter = genFKID != null ?
                new ObjectParameter("GenFKID", genFKID) :
                new ObjectParameter("GenFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductType_Result>("GetProductType", genFKIDParameter);
        }
    
        public virtual ObjectResult<GetProductforProductMatrixByXml_Result> GetProductforProductMatrixByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductforProductMatrixByXml_Result>("GetProductforProductMatrixByXml");
        }
    
        public virtual ObjectResult<GetProductMoleculeLink_Result> GetProductMoleculeLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductMoleculeLink_Result>("GetProductMoleculeLink");
        }
    
        public virtual ObjectResult<GetProductMoleculeLink1_Result> GetProductMoleculeLink1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductMoleculeLink1_Result>("GetProductMoleculeLink1");
        }
    
        public virtual int AddHolidayGroupTerritoryLinkMaster(Nullable<decimal> holidaygroupFKID, string xmlTerritoryFKID, Nullable<int> createdBy)
        {
            var holidaygroupFKIDParameter = holidaygroupFKID.HasValue ?
                new ObjectParameter("HolidaygroupFKID", holidaygroupFKID) :
                new ObjectParameter("HolidaygroupFKID", typeof(decimal));
    
            var xmlTerritoryFKIDParameter = xmlTerritoryFKID != null ?
                new ObjectParameter("xmlTerritoryFKID", xmlTerritoryFKID) :
                new ObjectParameter("xmlTerritoryFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHolidayGroupTerritoryLinkMaster", holidaygroupFKIDParameter, xmlTerritoryFKIDParameter, createdByParameter);
        }
    
        public virtual int EditHolidayGroupTerritoryLinkMaster(Nullable<decimal> holidaygroupFKID, string xmlTerritoryFKID, Nullable<int> createdBy)
        {
            var holidaygroupFKIDParameter = holidaygroupFKID.HasValue ?
                new ObjectParameter("HolidaygroupFKID", holidaygroupFKID) :
                new ObjectParameter("HolidaygroupFKID", typeof(decimal));
    
            var xmlTerritoryFKIDParameter = xmlTerritoryFKID != null ?
                new ObjectParameter("xmlTerritoryFKID", xmlTerritoryFKID) :
                new ObjectParameter("xmlTerritoryFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditHolidayGroupTerritoryLinkMaster", holidaygroupFKIDParameter, xmlTerritoryFKIDParameter, createdByParameter);
        }
    
        public virtual ObjectResult<GetHolidayGroupNameByXml_Result> GetHolidayGroupNameByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHolidayGroupNameByXml_Result>("GetHolidayGroupNameByXml");
        }
    
        public virtual ObjectResult<GetOpinionPollByXML_Result> GetOpinionPollByXML(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOpinionPollByXML_Result>("GetOpinionPollByXML", pKIDParameter);
        }
    
        public virtual ObjectResult<GetOpinionPollSelectedValues1_Result> GetOpinionPollSelectedValues1(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOpinionPollSelectedValues1_Result>("GetOpinionPollSelectedValues1", pKIDParameter);
        }
    
        public virtual ObjectResult<GetDivisionByXML_Result> GetDivisionByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDivisionByXML_Result>("GetDivisionByXML");
        }
    
        public virtual ObjectResult<GetNodeTypeByXML_Result> GetNodeTypeByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNodeTypeByXML_Result>("GetNodeTypeByXML");
        }
    
        public virtual ObjectResult<GetUserByXml_Result> GetUserByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByXml_Result>("GetUserByXml");
        }
    
        public virtual int AddOpinionPoll(string teamFKID, string question, string option1, string option2, string option3, string option4, string option5, Nullable<decimal> isActive)
        {
            var teamFKIDParameter = teamFKID != null ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var option1Parameter = option1 != null ?
                new ObjectParameter("Option1", option1) :
                new ObjectParameter("Option1", typeof(string));
    
            var option2Parameter = option2 != null ?
                new ObjectParameter("Option2", option2) :
                new ObjectParameter("Option2", typeof(string));
    
            var option3Parameter = option3 != null ?
                new ObjectParameter("Option3", option3) :
                new ObjectParameter("Option3", typeof(string));
    
            var option4Parameter = option4 != null ?
                new ObjectParameter("Option4", option4) :
                new ObjectParameter("Option4", typeof(string));
    
            var option5Parameter = option5 != null ?
                new ObjectParameter("Option5", option5) :
                new ObjectParameter("Option5", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOpinionPoll", teamFKIDParameter, questionParameter, option1Parameter, option2Parameter, option3Parameter, option4Parameter, option5Parameter, isActiveParameter);
        }
    
        public virtual int DeleteOpinionPoll(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOpinionPoll", pKIDParameter);
        }
    
        public virtual int EditOpinionPoll(string teamFKID, string question, string option1, string option2, string option3, string option4, string option5, Nullable<decimal> isActive, Nullable<decimal> pKID)
        {
            var teamFKIDParameter = teamFKID != null ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var option1Parameter = option1 != null ?
                new ObjectParameter("Option1", option1) :
                new ObjectParameter("Option1", typeof(string));
    
            var option2Parameter = option2 != null ?
                new ObjectParameter("Option2", option2) :
                new ObjectParameter("Option2", typeof(string));
    
            var option3Parameter = option3 != null ?
                new ObjectParameter("Option3", option3) :
                new ObjectParameter("Option3", typeof(string));
    
            var option4Parameter = option4 != null ?
                new ObjectParameter("Option4", option4) :
                new ObjectParameter("Option4", typeof(string));
    
            var option5Parameter = option5 != null ?
                new ObjectParameter("Option5", option5) :
                new ObjectParameter("Option5", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(decimal));
    
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditOpinionPoll", teamFKIDParameter, questionParameter, option1Parameter, option2Parameter, option3Parameter, option4Parameter, option5Parameter, isActiveParameter, pKIDParameter);
        }
    
        public virtual ObjectResult<GetDivUserByXml_Result> GetDivUserByXml(string nodeID, string divID)
        {
            var nodeIDParameter = nodeID != null ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(string));
    
            var divIDParameter = divID != null ?
                new ObjectParameter("DivID", divID) :
                new ObjectParameter("DivID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDivUserByXml_Result>("GetDivUserByXml", nodeIDParameter, divIDParameter);
        }
    
        public virtual ObjectResult<usp_ReconcileSettings_Result> usp_ReconcileSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReconcileSettings_Result>("usp_ReconcileSettings");
        }
    
        public virtual ObjectResult<GetTeamNameForReconcileByPKID_Result1> GetTeamNameForReconcileByPKID(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeamNameForReconcileByPKID_Result1>("GetTeamNameForReconcileByPKID", pKIDParameter);
        }
    
        public virtual int EditSampleInputReconcileSettings(string startDate, string xmlStr, Nullable<int> createdBy, Nullable<long> pKID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSampleInputReconcileSettings", startDateParameter, xmlStrParameter, createdByParameter, pKIDParameter);
        }
    
        public virtual ObjectResult<GetTeamsByXML_Result> GetTeamsByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeamsByXML_Result>("GetTeamsByXML");
        }
    
        public virtual int AddSampleInputReconcileSettings(string startDate, string xmlStr, Nullable<int> createdBy)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSampleInputReconcileSettings", startDateParameter, xmlStrParameter, createdByParameter);
        }
    
        public virtual int DeleteSampleInputReconcileSettings(Nullable<decimal> pKID, Nullable<int> createdBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSampleInputReconcileSettings", pKIDParameter, createdByParameter);
        }
    
        public virtual ObjectResult<string> Usp_GetPSOsForCyclePlanUnlock(Nullable<int> cycleFKID, Nullable<int> divPKID, Nullable<int> teamPKID)
        {
            var cycleFKIDParameter = cycleFKID.HasValue ?
                new ObjectParameter("CycleFKID", cycleFKID) :
                new ObjectParameter("CycleFKID", typeof(int));
    
            var divPKIDParameter = divPKID.HasValue ?
                new ObjectParameter("DivPKID", divPKID) :
                new ObjectParameter("DivPKID", typeof(int));
    
            var teamPKIDParameter = teamPKID.HasValue ?
                new ObjectParameter("TeamPKID", teamPKID) :
                new ObjectParameter("TeamPKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Usp_GetPSOsForCyclePlanUnlock", cycleFKIDParameter, divPKIDParameter, teamPKIDParameter);
        }
    
        public virtual int AddTeamRegionLinkMaster(Nullable<decimal> teamFKID, string xmlRegionFKID, Nullable<int> createdBy)
        {
            var teamFKIDParameter = teamFKID.HasValue ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(decimal));
    
            var xmlRegionFKIDParameter = xmlRegionFKID != null ?
                new ObjectParameter("xmlRegionFKID", xmlRegionFKID) :
                new ObjectParameter("xmlRegionFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTeamRegionLinkMaster", teamFKIDParameter, xmlRegionFKIDParameter, createdByParameter);
        }
    
        public virtual int AddTerritoryHQLinkMaster(Nullable<decimal> hQFKID, string xmlTerFKID, Nullable<int> createdBy)
        {
            var hQFKIDParameter = hQFKID.HasValue ?
                new ObjectParameter("HQFKID", hQFKID) :
                new ObjectParameter("HQFKID", typeof(decimal));
    
            var xmlTerFKIDParameter = xmlTerFKID != null ?
                new ObjectParameter("xmlTerFKID", xmlTerFKID) :
                new ObjectParameter("xmlTerFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTerritoryHQLinkMaster", hQFKIDParameter, xmlTerFKIDParameter, createdByParameter);
        }
    
        public virtual int DeleteTeamRegionLinkMaster(Nullable<decimal> teamFKID, Nullable<decimal> regionFKID)
        {
            var teamFKIDParameter = teamFKID.HasValue ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(decimal));
    
            var regionFKIDParameter = regionFKID.HasValue ?
                new ObjectParameter("RegionFKID", regionFKID) :
                new ObjectParameter("RegionFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTeamRegionLinkMaster", teamFKIDParameter, regionFKIDParameter);
        }
    
        public virtual int EditTeamRegionLinkMaster(Nullable<decimal> teamFKID, Nullable<int> isActive, Nullable<int> createdBy, string xmlRegionFKID, Nullable<int> modifiedBy)
        {
            var teamFKIDParameter = teamFKID.HasValue ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(decimal));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var xmlRegionFKIDParameter = xmlRegionFKID != null ?
                new ObjectParameter("xmlRegionFKID", xmlRegionFKID) :
                new ObjectParameter("xmlRegionFKID", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditTeamRegionLinkMaster", teamFKIDParameter, isActiveParameter, createdByParameter, xmlRegionFKIDParameter, modifiedByParameter);
        }
    
        public virtual int EditTerritoryHQLinkMaster(Nullable<decimal> hQFKID, Nullable<int> isActive, Nullable<int> createdBy, string xmlTerFKID, Nullable<int> modifiedBy)
        {
            var hQFKIDParameter = hQFKID.HasValue ?
                new ObjectParameter("HQFKID", hQFKID) :
                new ObjectParameter("HQFKID", typeof(decimal));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var xmlTerFKIDParameter = xmlTerFKID != null ?
                new ObjectParameter("xmlTerFKID", xmlTerFKID) :
                new ObjectParameter("xmlTerFKID", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditTerritoryHQLinkMaster", hQFKIDParameter, isActiveParameter, createdByParameter, xmlTerFKIDParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<GetAllRegionNotAssignedTeamByXml_Result> GetAllRegionNotAssignedTeamByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRegionNotAssignedTeamByXml_Result>("GetAllRegionNotAssignedTeamByXml");
        }
    
        public virtual ObjectResult<GetAllTeamRegionLinkByXml_Result> GetAllTeamRegionLinkByXml(string teamFKID)
        {
            var teamFKIDParameter = teamFKID != null ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTeamRegionLinkByXml_Result>("GetAllTeamRegionLinkByXml", teamFKIDParameter);
        }
    
        public virtual ObjectResult<GetHQNameByXML_Result> GetHQNameByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHQNameByXML_Result>("GetHQNameByXML");
        }
    
        public virtual ObjectResult<GetHQNameForTerByXML_Result> GetHQNameForTerByXML(string hQFKID)
        {
            var hQFKIDParameter = hQFKID != null ?
                new ObjectParameter("HQFKID", hQFKID) :
                new ObjectParameter("HQFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHQNameForTerByXML_Result>("GetHQNameForTerByXML", hQFKIDParameter);
        }
    
        public virtual ObjectResult<GetTeamMasteByPKIDByXML_Result> GetTeamMasteByPKIDByXML(Nullable<int> teamFKID)
        {
            var teamFKIDParameter = teamFKID.HasValue ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeamMasteByPKIDByXML_Result>("GetTeamMasteByPKIDByXML", teamFKIDParameter);
        }
    
        public virtual ObjectResult<GetTeamMasterByXML_Result> GetTeamMasterByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeamMasterByXML_Result>("GetTeamMasterByXML");
        }
    
        public virtual ObjectResult<GetTerritoryNameforHQEditByXml_Result> GetTerritoryNameforHQEditByXml(string hQFKID, string territoryFKID)
        {
            var hQFKIDParameter = hQFKID != null ?
                new ObjectParameter("HQFKID", hQFKID) :
                new ObjectParameter("HQFKID", typeof(string));
    
            var territoryFKIDParameter = territoryFKID != null ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerritoryNameforHQEditByXml_Result>("GetTerritoryNameforHQEditByXml", hQFKIDParameter, territoryFKIDParameter);
        }
    
        public virtual ObjectResult<GetTerritoryNameforHQTerByXml_Result> GetTerritoryNameforHQTerByXml(string hQFKID, string territoryFKID)
        {
            var hQFKIDParameter = hQFKID != null ?
                new ObjectParameter("HQFKID", hQFKID) :
                new ObjectParameter("HQFKID", typeof(string));
    
            var territoryFKIDParameter = territoryFKID != null ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerritoryNameforHQTerByXml_Result>("GetTerritoryNameforHQTerByXml", hQFKIDParameter, territoryFKIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_TeamRegionLink_Result> USP_GET_TeamRegionLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_TeamRegionLink_Result>("USP_GET_TeamRegionLink");
        }
    
        public virtual ObjectResult<USP_GET_TerritoryHQLink_Result> USP_GET_TerritoryHQLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_TerritoryHQLink_Result>("USP_GET_TerritoryHQLink");
        }
    
        public virtual int DeleteTerritoryHQLinkMaster(Nullable<decimal> hQFkid, Nullable<decimal> territoryFKID)
        {
            var hQFkidParameter = hQFkid.HasValue ?
                new ObjectParameter("HQFkid", hQFkid) :
                new ObjectParameter("HQFkid", typeof(decimal));
    
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTerritoryHQLinkMaster", hQFkidParameter, territoryFKIDParameter);
        }
    
        public virtual int AddProductSpecialityLinkMaster(Nullable<decimal> productFKID, string xmlSpecialityFKID, Nullable<int> createdBy)
        {
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(decimal));
    
            var xmlSpecialityFKIDParameter = xmlSpecialityFKID != null ?
                new ObjectParameter("xmlSpecialityFKID", xmlSpecialityFKID) :
                new ObjectParameter("xmlSpecialityFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProductSpecialityLinkMaster", productFKIDParameter, xmlSpecialityFKIDParameter, createdByParameter);
        }
    
        public virtual int DeleteProductSpecialityLinkMaster(Nullable<decimal> productFKID, Nullable<decimal> specialityFKID)
        {
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(decimal));
    
            var specialityFKIDParameter = specialityFKID.HasValue ?
                new ObjectParameter("SpecialityFKID", specialityFKID) :
                new ObjectParameter("SpecialityFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProductSpecialityLinkMaster", productFKIDParameter, specialityFKIDParameter);
        }
    
        public virtual int EditSpecMaster(Nullable<int> specialityFKID, Nullable<decimal> productFKID, string xmlSpecialityFKID, Nullable<int> createdBy, Nullable<int> isActive)
        {
            var specialityFKIDParameter = specialityFKID.HasValue ?
                new ObjectParameter("SpecialityFKID", specialityFKID) :
                new ObjectParameter("SpecialityFKID", typeof(int));
    
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(decimal));
    
            var xmlSpecialityFKIDParameter = xmlSpecialityFKID != null ?
                new ObjectParameter("xmlSpecialityFKID", xmlSpecialityFKID) :
                new ObjectParameter("xmlSpecialityFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSpecMaster", specialityFKIDParameter, productFKIDParameter, xmlSpecialityFKIDParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GetProductforSpecialityByXML_Result> GetProductforSpecialityByXML(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductforSpecialityByXML_Result>("GetProductforSpecialityByXML", pKIDParameter);
        }
    
        public virtual ObjectResult<GetPSOSample_Result> GetPSOSample(Nullable<decimal> userFKID)
        {
            var userFKIDParameter = userFKID.HasValue ?
                new ObjectParameter("UserFKID", userFKID) :
                new ObjectParameter("UserFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPSOSample_Result>("GetPSOSample", userFKIDParameter);
        }
    
        public virtual ObjectResult<GetSpecforProductPKIDByXMLN_Result> GetSpecforProductPKIDByXMLN(Nullable<int> productFKID)
        {
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSpecforProductPKIDByXMLN_Result>("GetSpecforProductPKIDByXMLN", productFKIDParameter);
        }
    
        public virtual ObjectResult<GetSpecforProductPKIDByXMLNNotInN_Result> GetSpecforProductPKIDByXMLNNotInN(Nullable<int> productFKID)
        {
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSpecforProductPKIDByXMLNNotInN_Result>("GetSpecforProductPKIDByXMLNNotInN", productFKIDParameter);
        }
    
        public virtual ObjectResult<GetSpecializationforProductMatrixByXML_Result> GetSpecializationforProductMatrixByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSpecializationforProductMatrixByXML_Result>("GetSpecializationforProductMatrixByXML");
        }
    
        public virtual ObjectResult<SampleAllocationAck_Result> SampleAllocationAck(string xmlStr)
        {
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SampleAllocationAck_Result>("SampleAllocationAck", xmlStrParameter);
        }
    
        public virtual ObjectResult<USP_GET_ProductDetailingMatrix_Result> USP_GET_ProductDetailingMatrix()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ProductDetailingMatrix_Result>("USP_GET_ProductDetailingMatrix");
        }
    
        public virtual ObjectResult<GetPSOInputSample_Result> GetPSOInputSample(Nullable<decimal> userFKID)
        {
            var userFKIDParameter = userFKID.HasValue ?
                new ObjectParameter("UserFKID", userFKID) :
                new ObjectParameter("UserFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPSOInputSample_Result>("GetPSOInputSample", userFKIDParameter);
        }
    
        public virtual int AddFAQS(Nullable<decimal> categoryFKID, string question, string answer, Nullable<bool> isActive, Nullable<decimal> createdBy)
        {
            var categoryFKIDParameter = categoryFKID.HasValue ?
                new ObjectParameter("CategoryFKID", categoryFKID) :
                new ObjectParameter("CategoryFKID", typeof(decimal));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFAQS", categoryFKIDParameter, questionParameter, answerParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int DeleteFAQS(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFAQS", pKIDParameter);
        }
    
        public virtual int EditFAQS(Nullable<decimal> pKID, Nullable<decimal> categoryFKID, string question, string answer, Nullable<bool> isActive, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var categoryFKIDParameter = categoryFKID.HasValue ?
                new ObjectParameter("CategoryFKID", categoryFKID) :
                new ObjectParameter("CategoryFKID", typeof(decimal));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditFAQS", pKIDParameter, categoryFKIDParameter, questionParameter, answerParameter, isActiveParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<GetCategoryByID_Result> GetCategoryByID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryByID_Result>("GetCategoryByID");
        }
    
        public virtual ObjectResult<USP_GET_InfoBankUpLoad_Result> USP_GET_InfoBankUpLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_InfoBankUpLoad_Result>("USP_GET_InfoBankUpLoad");
        }
    
        public virtual int AddEmployeeMaster(string empCode, Nullable<decimal> titleFKID, string firstName, string middleName, string lastName, string shortName, string sex, Nullable<System.DateTime> dateOfBirth, Nullable<System.DateTime> joiningDate, string address, string street, string area, string zipCode, string phoneNo, string mobile, string email, string hQ, Nullable<decimal> martialStatusFKID, Nullable<decimal> designationFKID, string oldEmployeeCode, Nullable<int> iSDCode, Nullable<int> sTDCode, Nullable<bool> isActive, Nullable<decimal> createdBy)
        {
            var empCodeParameter = empCode != null ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(string));
    
            var titleFKIDParameter = titleFKID.HasValue ?
                new ObjectParameter("TitleFKID", titleFKID) :
                new ObjectParameter("TitleFKID", typeof(decimal));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("JoiningDate", joiningDate) :
                new ObjectParameter("JoiningDate", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var hQParameter = hQ != null ?
                new ObjectParameter("HQ", hQ) :
                new ObjectParameter("HQ", typeof(string));
    
            var martialStatusFKIDParameter = martialStatusFKID.HasValue ?
                new ObjectParameter("MartialStatusFKID", martialStatusFKID) :
                new ObjectParameter("MartialStatusFKID", typeof(decimal));
    
            var designationFKIDParameter = designationFKID.HasValue ?
                new ObjectParameter("DesignationFKID", designationFKID) :
                new ObjectParameter("DesignationFKID", typeof(decimal));
    
            var oldEmployeeCodeParameter = oldEmployeeCode != null ?
                new ObjectParameter("OldEmployeeCode", oldEmployeeCode) :
                new ObjectParameter("OldEmployeeCode", typeof(string));
    
            var iSDCodeParameter = iSDCode.HasValue ?
                new ObjectParameter("ISDCode", iSDCode) :
                new ObjectParameter("ISDCode", typeof(int));
    
            var sTDCodeParameter = sTDCode.HasValue ?
                new ObjectParameter("STDCode", sTDCode) :
                new ObjectParameter("STDCode", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmployeeMaster", empCodeParameter, titleFKIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, shortNameParameter, sexParameter, dateOfBirthParameter, joiningDateParameter, addressParameter, streetParameter, areaParameter, zipCodeParameter, phoneNoParameter, mobileParameter, emailParameter, hQParameter, martialStatusFKIDParameter, designationFKIDParameter, oldEmployeeCodeParameter, iSDCodeParameter, sTDCodeParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int AddHolidayGroupLinkMaster(Nullable<decimal> holidaygroupFKID, string xmlHolidayFKID, Nullable<int> createdBy)
        {
            var holidaygroupFKIDParameter = holidaygroupFKID.HasValue ?
                new ObjectParameter("HolidaygroupFKID", holidaygroupFKID) :
                new ObjectParameter("HolidaygroupFKID", typeof(decimal));
    
            var xmlHolidayFKIDParameter = xmlHolidayFKID != null ?
                new ObjectParameter("xmlHolidayFKID", xmlHolidayFKID) :
                new ObjectParameter("xmlHolidayFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHolidayGroupLinkMaster", holidaygroupFKIDParameter, xmlHolidayFKIDParameter, createdByParameter);
        }
    
        public virtual int DeleteEmployeeMaster(Nullable<decimal> pKID, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployeeMaster", pKIDParameter, modifiedByParameter);
        }
    
        public virtual int EditEmployeeMaster(Nullable<decimal> pKID, string empCode, Nullable<decimal> titleFKID, string firstName, string middleName, string lastName, string shortName, string sex, Nullable<System.DateTime> dateOfBirth, Nullable<System.DateTime> joiningDate, string address, string street, string area, string zipCode, string phoneNo, string mobile, string email, string hQ, Nullable<decimal> martialStatusFKID, Nullable<decimal> designationFKID, string oldEmployeeCode, Nullable<int> iSDCode, Nullable<int> sTDCode, Nullable<bool> isActive, Nullable<decimal> modifiedBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var empCodeParameter = empCode != null ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(string));
    
            var titleFKIDParameter = titleFKID.HasValue ?
                new ObjectParameter("TitleFKID", titleFKID) :
                new ObjectParameter("TitleFKID", typeof(decimal));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("JoiningDate", joiningDate) :
                new ObjectParameter("JoiningDate", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var hQParameter = hQ != null ?
                new ObjectParameter("HQ", hQ) :
                new ObjectParameter("HQ", typeof(string));
    
            var martialStatusFKIDParameter = martialStatusFKID.HasValue ?
                new ObjectParameter("MartialStatusFKID", martialStatusFKID) :
                new ObjectParameter("MartialStatusFKID", typeof(decimal));
    
            var designationFKIDParameter = designationFKID.HasValue ?
                new ObjectParameter("DesignationFKID", designationFKID) :
                new ObjectParameter("DesignationFKID", typeof(decimal));
    
            var oldEmployeeCodeParameter = oldEmployeeCode != null ?
                new ObjectParameter("OldEmployeeCode", oldEmployeeCode) :
                new ObjectParameter("OldEmployeeCode", typeof(string));
    
            var iSDCodeParameter = iSDCode.HasValue ?
                new ObjectParameter("ISDCode", iSDCode) :
                new ObjectParameter("ISDCode", typeof(int));
    
            var sTDCodeParameter = sTDCode.HasValue ?
                new ObjectParameter("STDCode", sTDCode) :
                new ObjectParameter("STDCode", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditEmployeeMaster", pKIDParameter, empCodeParameter, titleFKIDParameter, firstNameParameter, middleNameParameter, lastNameParameter, shortNameParameter, sexParameter, dateOfBirthParameter, joiningDateParameter, addressParameter, streetParameter, areaParameter, zipCodeParameter, phoneNoParameter, mobileParameter, emailParameter, hQParameter, martialStatusFKIDParameter, designationFKIDParameter, oldEmployeeCodeParameter, iSDCodeParameter, sTDCodeParameter, isActiveParameter, modifiedByParameter);
        }
    
        public virtual int EditHolidayGroupLinkMaster(Nullable<decimal> holidaygroupFKID, string xmlHolidayFKID, Nullable<int> createdBy)
        {
            var holidaygroupFKIDParameter = holidaygroupFKID.HasValue ?
                new ObjectParameter("HolidaygroupFKID", holidaygroupFKID) :
                new ObjectParameter("HolidaygroupFKID", typeof(decimal));
    
            var xmlHolidayFKIDParameter = xmlHolidayFKID != null ?
                new ObjectParameter("xmlHolidayFKID", xmlHolidayFKID) :
                new ObjectParameter("xmlHolidayFKID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditHolidayGroupLinkMaster", holidaygroupFKIDParameter, xmlHolidayFKIDParameter, createdByParameter);
        }
    
        public virtual ObjectResult<GetCityByXML_Result> GetCityByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityByXML_Result>("GetCityByXML");
        }
    
        public virtual ObjectResult<GetDesignationByXML_Result> GetDesignationByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDesignationByXML_Result>("GetDesignationByXML");
        }
    
        public virtual ObjectResult<GetDesignationMasterDetail_Result> GetDesignationMasterDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDesignationMasterDetail_Result>("GetDesignationMasterDetail");
        }
    
        public virtual ObjectResult<GetEmployeMaster_Result> GetEmployeMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeMaster_Result>("GetEmployeMaster");
        }
    
        public virtual ObjectResult<GetEmpNameByNodeTypeFKIDXml_Result> GetEmpNameByNodeTypeFKIDXml(Nullable<int> nodeTypeFKID)
        {
            var nodeTypeFKIDParameter = nodeTypeFKID.HasValue ?
                new ObjectParameter("NodeTypeFKID", nodeTypeFKID) :
                new ObjectParameter("NodeTypeFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpNameByNodeTypeFKIDXml_Result>("GetEmpNameByNodeTypeFKIDXml", nodeTypeFKIDParameter);
        }
    
        public virtual ObjectResult<GetHolidayDescriptionByXml_Result> GetHolidayDescriptionByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHolidayDescriptionByXml_Result>("GetHolidayDescriptionByXml");
        }
    
        public virtual ObjectResult<GetHolidaygroup_Result> GetHolidaygroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHolidaygroup_Result>("GetHolidaygroup");
        }
    
        public virtual ObjectResult<getUserTeamLink_Result> getUserTeamLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserTeamLink_Result>("getUserTeamLink");
        }
    
        public virtual int USerTeamLinkAddLatest(Nullable<decimal> teamFKID, Nullable<decimal> nodeTypeFKID, string xmlStr, Nullable<int> createdBy, Nullable<bool> isActive)
        {
            var teamFKIDParameter = teamFKID.HasValue ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(decimal));
    
            var nodeTypeFKIDParameter = nodeTypeFKID.HasValue ?
                new ObjectParameter("NodeTypeFKID", nodeTypeFKID) :
                new ObjectParameter("NodeTypeFKID", typeof(decimal));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USerTeamLinkAddLatest", teamFKIDParameter, nodeTypeFKIDParameter, xmlStrParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int USerTeamLinkAddNew(Nullable<decimal> teamFKID, Nullable<decimal> nodeTypeFKID, string xmlStr, Nullable<int> createdBy, Nullable<bool> isActive)
        {
            var teamFKIDParameter = teamFKID.HasValue ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(decimal));
    
            var nodeTypeFKIDParameter = nodeTypeFKID.HasValue ?
                new ObjectParameter("NodeTypeFKID", nodeTypeFKID) :
                new ObjectParameter("NodeTypeFKID", typeof(decimal));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USerTeamLinkAddNew", teamFKIDParameter, nodeTypeFKIDParameter, xmlStrParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int USerTeamLinkDelete(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USerTeamLinkDelete", pKIDParameter);
        }
    
        public virtual int AddDistrictTerritorylinkMaster(Nullable<decimal> districtFKID, string xml, Nullable<bool> isActive, Nullable<decimal> createdBy)
        {
            var districtFKIDParameter = districtFKID.HasValue ?
                new ObjectParameter("DistrictFKID", districtFKID) :
                new ObjectParameter("DistrictFKID", typeof(decimal));
    
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDistrictTerritorylinkMaster", districtFKIDParameter, xmlParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int AddRegionDistrictLinkMaster(Nullable<decimal> regionFKID, string xml, Nullable<bool> isActive, Nullable<decimal> createdBy)
        {
            var regionFKIDParameter = regionFKID.HasValue ?
                new ObjectParameter("RegionFKID", regionFKID) :
                new ObjectParameter("RegionFKID", typeof(decimal));
    
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRegionDistrictLinkMaster", regionFKIDParameter, xmlParameter, isActiveParameter, createdByParameter);
        }
    
        public virtual int DeleteRegionDistrictLinkMaster(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRegionDistrictLinkMaster", pKIDParameter);
        }
    
        public virtual ObjectResult<GetDistrictNameforTerittoryByXml_Result> GetDistrictNameforTerittoryByXml(string regionFKID)
        {
            var regionFKIDParameter = regionFKID != null ?
                new ObjectParameter("RegionFKID", regionFKID) :
                new ObjectParameter("RegionFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistrictNameforTerittoryByXml_Result>("GetDistrictNameforTerittoryByXml", regionFKIDParameter);
        }
    
        public virtual ObjectResult<GetDistrictTerritoryLink_Result> GetDistrictTerritoryLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistrictTerritoryLink_Result>("GetDistrictTerritoryLink");
        }
    
        public virtual ObjectResult<GetRegionCodeByXml_Result> GetRegionCodeByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRegionCodeByXml_Result>("GetRegionCodeByXml");
        }
    
        public virtual ObjectResult<GetRegionDistrictLink_Result> GetRegionDistrictLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRegionDistrictLink_Result>("GetRegionDistrictLink");
        }
    
        public virtual int DeleteDistrictTerritoryLinkMaster(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDistrictTerritoryLinkMaster", pKIDParameter);
        }
    
        public virtual int AddInputProductLinkMaser(Nullable<decimal> inputFKID, string xmlStr, Nullable<int> createdBy)
        {
            var inputFKIDParameter = inputFKID.HasValue ?
                new ObjectParameter("InputFKID", inputFKID) :
                new ObjectParameter("InputFKID", typeof(decimal));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddInputProductLinkMaser", inputFKIDParameter, xmlStrParameter, createdByParameter);
        }
    
        public virtual int AddInputTeamLinkMaser(Nullable<decimal> inputFKID, string xmlStr, Nullable<int> createdBy)
        {
            var inputFKIDParameter = inputFKID.HasValue ?
                new ObjectParameter("InputFKID", inputFKID) :
                new ObjectParameter("InputFKID", typeof(decimal));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddInputTeamLinkMaser", inputFKIDParameter, xmlStrParameter, createdByParameter);
        }
    
        public virtual int DeleteInputProductLinkMaser(Nullable<decimal> pKID, Nullable<int> createdBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteInputProductLinkMaser", pKIDParameter, createdByParameter);
        }
    
        public virtual int DeleteInputTeamLinkMaser(Nullable<decimal> pKID, Nullable<int> createdBy)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteInputTeamLinkMaser", pKIDParameter, createdByParameter);
        }
    
        public virtual ObjectResult<GetInputNamebyXML_Result> GetInputNamebyXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInputNamebyXML_Result>("GetInputNamebyXML");
        }
    
        public virtual ObjectResult<GetInputProductLinkMaster_Result> GetInputProductLinkMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInputProductLinkMaster_Result>("GetInputProductLinkMaster");
        }
    
        public virtual ObjectResult<GetInputteamlink_Result> GetInputteamlink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInputteamlink_Result>("GetInputteamlink");
        }
    
        public virtual ObjectResult<RR_GetAllTeam_Result> RR_GetAllTeam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RR_GetAllTeam_Result>("RR_GetAllTeam");
        }
    
        public virtual int RR_InsertUserReminderLink(string xmlStr, Nullable<int> userFKID)
        {
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var userFKIDParameter = userFKID.HasValue ?
                new ObjectParameter("UserFKID", userFKID) :
                new ObjectParameter("UserFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RR_InsertUserReminderLink", xmlStrParameter, userFKIDParameter);
        }
    
        public virtual ObjectResult<string> GetOpinionPollTotalCount(string getColumn, string searchLike, Nullable<decimal> pollFKID)
        {
            var getColumnParameter = getColumn != null ?
                new ObjectParameter("GetColumn", getColumn) :
                new ObjectParameter("GetColumn", typeof(string));
    
            var searchLikeParameter = searchLike != null ?
                new ObjectParameter("SearchLike", searchLike) :
                new ObjectParameter("SearchLike", typeof(string));
    
            var pollFKIDParameter = pollFKID.HasValue ?
                new ObjectParameter("PollFKID", pollFKID) :
                new ObjectParameter("PollFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetOpinionPollTotalCount", getColumnParameter, searchLikeParameter, pollFKIDParameter);
        }
    
        public virtual ObjectResult<string> ShowOpinionPollRating(Nullable<int> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShowOpinionPollRating", pKIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetOpinionPollTotalCount1(string getColumn, string searchLike, Nullable<decimal> pollFKID)
        {
            var getColumnParameter = getColumn != null ?
                new ObjectParameter("GetColumn", getColumn) :
                new ObjectParameter("GetColumn", typeof(string));
    
            var searchLikeParameter = searchLike != null ?
                new ObjectParameter("SearchLike", searchLike) :
                new ObjectParameter("SearchLike", typeof(string));
    
            var pollFKIDParameter = pollFKID.HasValue ?
                new ObjectParameter("PollFKID", pollFKID) :
                new ObjectParameter("PollFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetOpinionPollTotalCount1", getColumnParameter, searchLikeParameter, pollFKIDParameter);
        }
    
        public virtual ObjectResult<ShowOpinionPollRating1_Result> ShowOpinionPollRating1(Nullable<int> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowOpinionPollRating1_Result>("ShowOpinionPollRating1", pKIDParameter);
        }
    
        public virtual int AddSettingMasterTeamWiseNew(Nullable<decimal> pSOFKID, string xmlStr, Nullable<decimal> modifiedBy)
        {
            var pSOFKIDParameter = pSOFKID.HasValue ?
                new ObjectParameter("PSOFKID", pSOFKID) :
                new ObjectParameter("PSOFKID", typeof(decimal));
    
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSettingMasterTeamWiseNew", pSOFKIDParameter, xmlStrParameter, modifiedByParameter);
        }
    
        public virtual int InputAllocationAck(string xmlStr)
        {
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InputAllocationAck", xmlStrParameter);
        }
    
        public virtual int InputMasterAck(string xmlStr, Nullable<decimal> userFKID, Nullable<decimal> territoryFKID)
        {
            var xmlStrParameter = xmlStr != null ?
                new ObjectParameter("XmlStr", xmlStr) :
                new ObjectParameter("XmlStr", typeof(string));
    
            var userFKIDParameter = userFKID.HasValue ?
                new ObjectParameter("UserFKID", userFKID) :
                new ObjectParameter("UserFKID", typeof(decimal));
    
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InputMasterAck", xmlStrParameter, userFKIDParameter, territoryFKIDParameter);
        }
    
        public virtual ObjectResult<GetDivisonMasterByPkid_Result> GetDivisonMasterByPkid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDivisonMasterByPkid_Result>("GetDivisonMasterByPkid");
        }
    
        public virtual ObjectResult<GetAreaDetailsPCL_Result> GetAreaDetailsPCL(Nullable<int> territoryFKID)
        {
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAreaDetailsPCL_Result>("GetAreaDetailsPCL", territoryFKIDParameter);
        }
    
        public virtual ObjectResult<AllPendingCustomer_Result> AllPendingCustomer(Nullable<decimal> pSOFKID, string areaFKID, string xMLCusCode)
        {
            var pSOFKIDParameter = pSOFKID.HasValue ?
                new ObjectParameter("PSOFKID", pSOFKID) :
                new ObjectParameter("PSOFKID", typeof(decimal));
    
            var areaFKIDParameter = areaFKID != null ?
                new ObjectParameter("AreaFKID", areaFKID) :
                new ObjectParameter("AreaFKID", typeof(string));
    
            var xMLCusCodeParameter = xMLCusCode != null ?
                new ObjectParameter("XMLCusCode", xMLCusCode) :
                new ObjectParameter("XMLCusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllPendingCustomer_Result>("AllPendingCustomer", pSOFKIDParameter, areaFKIDParameter, xMLCusCodeParameter);
        }
    
        public virtual ObjectResult<GetReportingByXml_Result> GetReportingByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportingByXml_Result>("GetReportingByXml");
        }
    
        public virtual ObjectResult<getDistrictNameWSNew_Result> getDistrictNameWSNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDistrictNameWSNew_Result>("getDistrictNameWSNew");
        }
    
        public virtual ObjectResult<GetLocatioNameByXml_Result> GetLocatioNameByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocatioNameByXml_Result>("GetLocatioNameByXml");
        }
    
        public virtual ObjectResult<getRegionNameNew_Result> getRegionNameNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRegionNameNew_Result>("getRegionNameNew");
        }
    
        public virtual ObjectResult<GetTeamMasterByXML_New_Result> GetTeamMasterByXML_New(Nullable<decimal> divFKID)
        {
            var divFKIDParameter = divFKID.HasValue ?
                new ObjectParameter("DivFKID", divFKID) :
                new ObjectParameter("DivFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeamMasterByXML_New_Result>("GetTeamMasterByXML_New", divFKIDParameter);
        }
    
        public virtual ObjectResult<GetTerritoryByXml_Result> GetTerritoryByXml(Nullable<int> divFKID)
        {
            var divFKIDParameter = divFKID.HasValue ?
                new ObjectParameter("DivFKID", divFKID) :
                new ObjectParameter("DivFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerritoryByXml_Result>("GetTerritoryByXml", divFKIDParameter);
        }
    
        public virtual ObjectResult<getDistrictNameWSNew1_Result> getDistrictNameWSNew1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDistrictNameWSNew1_Result>("getDistrictNameWSNew1");
        }
    
        public virtual ObjectResult<GetCreateUserByPKID_Result> GetCreateUserByPKID(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreateUserByPKID_Result>("GetCreateUserByPKID", pKIDParameter);
        }
    
        public virtual ObjectResult<DefaultAnswer_Result> DefaultAnswer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DefaultAnswer_Result>("DefaultAnswer");
        }
    
        public virtual ObjectResult<string> GetCActivityType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCActivityType");
        }
    
        public virtual ObjectResult<string> GetCycleYearMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCycleYearMonth");
        }
    
        public virtual ObjectResult<GetDistrictNameExcludeforTerittoryByXml_Result> GetDistrictNameExcludeforTerittoryByXml(string regionFKID)
        {
            var regionFKIDParameter = regionFKID != null ?
                new ObjectParameter("RegionFKID", regionFKID) :
                new ObjectParameter("RegionFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistrictNameExcludeforTerittoryByXml_Result>("GetDistrictNameExcludeforTerittoryByXml", regionFKIDParameter);
        }
    
        public virtual int AddTerritoryAreaLinkMaster(Nullable<decimal> territoryFKID, Nullable<int> isActive, Nullable<int> createdBy, string xmlAreaFKID)
        {
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var xmlAreaFKIDParameter = xmlAreaFKID != null ?
                new ObjectParameter("xmlAreaFKID", xmlAreaFKID) :
                new ObjectParameter("xmlAreaFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTerritoryAreaLinkMaster", territoryFKIDParameter, isActiveParameter, createdByParameter, xmlAreaFKIDParameter);
        }
    
        public virtual int DeleteTerritoryAreaLinkMaster(Nullable<decimal> territoryFKID, Nullable<decimal> areaFKID)
        {
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            var areaFKIDParameter = areaFKID.HasValue ?
                new ObjectParameter("AreaFKID", areaFKID) :
                new ObjectParameter("AreaFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTerritoryAreaLinkMaster", territoryFKIDParameter, areaFKIDParameter);
        }
    
        public virtual int EditTerritoryAreaLinkMaster(Nullable<decimal> territoryFKID, Nullable<int> isActive, Nullable<int> createdBy, string xmlAreaFKID, Nullable<int> modifiedBy)
        {
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var xmlAreaFKIDParameter = xmlAreaFKID != null ?
                new ObjectParameter("xmlAreaFKID", xmlAreaFKID) :
                new ObjectParameter("xmlAreaFKID", typeof(string));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditTerritoryAreaLinkMaster", territoryFKIDParameter, isActiveParameter, createdByParameter, xmlAreaFKIDParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<GetBrickNameforCityByXml_Result> GetBrickNameforCityByXml(string cityFKID, string territoryFKID)
        {
            var cityFKIDParameter = cityFKID != null ?
                new ObjectParameter("CityFKID", cityFKID) :
                new ObjectParameter("CityFKID", typeof(string));
    
            var territoryFKIDParameter = territoryFKID != null ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBrickNameforCityByXml_Result>("GetBrickNameforCityByXml", cityFKIDParameter, territoryFKIDParameter);
        }
    
        public virtual ObjectResult<GetCityFCforTerritoryByXML_Result> GetCityFCforTerritoryByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityFCforTerritoryByXML_Result>("GetCityFCforTerritoryByXML");
        }
    
        public virtual ObjectResult<GetCityforTerritoryByXML_Result> GetCityforTerritoryByXML(string fCCName)
        {
            var fCCNameParameter = fCCName != null ?
                new ObjectParameter("FCCName", fCCName) :
                new ObjectParameter("FCCName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityforTerritoryByXML_Result>("GetCityforTerritoryByXML", fCCNameParameter);
        }
    
        public virtual ObjectResult<GetDistrictCodeByXml_Result> GetDistrictCodeByXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistrictCodeByXml_Result>("GetDistrictCodeByXml");
        }
    
        public virtual ObjectResult<GetTCodeFCforTerritoryByXML_Result> GetTCodeFCforTerritoryByXML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTCodeFCforTerritoryByXML_Result>("GetTCodeFCforTerritoryByXML");
        }
    
        public virtual ObjectResult<GetTCodeforTerritoryByXML_Result> GetTCodeforTerritoryByXML(string fCTCode)
        {
            var fCTCodeParameter = fCTCode != null ?
                new ObjectParameter("FCTCode", fCTCode) :
                new ObjectParameter("FCTCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTCodeforTerritoryByXML_Result>("GetTCodeforTerritoryByXML", fCTCodeParameter);
        }
    
        public virtual ObjectResult<GetTerritoryNameExcludeforDistrictByXml_Result> GetTerritoryNameExcludeforDistrictByXml(string districtFKID)
        {
            var districtFKIDParameter = districtFKID != null ?
                new ObjectParameter("DistrictFKID", districtFKID) :
                new ObjectParameter("DistrictFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerritoryNameExcludeforDistrictByXml_Result>("GetTerritoryNameExcludeforDistrictByXml", districtFKIDParameter);
        }
    
        public virtual ObjectResult<usp_GetTerritory_Result> usp_GetTerritory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTerritory_Result>("usp_GetTerritory");
        }
    
        public virtual ObjectResult<GetTeamNamefromInputMaster_Result> GetTeamNamefromInputMaster(Nullable<decimal> pKID, string actType)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var actTypeParameter = actType != null ?
                new ObjectParameter("ActType", actType) :
                new ObjectParameter("ActType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeamNamefromInputMaster_Result>("GetTeamNamefromInputMaster", pKIDParameter, actTypeParameter);
        }
    
        public virtual ObjectResult<GetInputProductLinkMaster1_Result> GetInputProductLinkMaster1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInputProductLinkMaster1_Result>("GetInputProductLinkMaster1");
        }
    
        public virtual ObjectResult<getInputTypebyInputMaster_Result> getInputTypebyInputMaster(Nullable<decimal> inputFKID, string actType)
        {
            var inputFKIDParameter = inputFKID.HasValue ?
                new ObjectParameter("InputFKID", inputFKID) :
                new ObjectParameter("InputFKID", typeof(decimal));
    
            var actTypeParameter = actType != null ?
                new ObjectParameter("ActType", actType) :
                new ObjectParameter("ActType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInputTypebyInputMaster_Result>("getInputTypebyInputMaster", inputFKIDParameter, actTypeParameter);
        }
    
        public virtual ObjectResult<GetProductNamefromInputMaster_Result> GetProductNamefromInputMaster(Nullable<decimal> pKID, string actType)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            var actTypeParameter = actType != null ?
                new ObjectParameter("ActType", actType) :
                new ObjectParameter("ActType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductNamefromInputMaster_Result>("GetProductNamefromInputMaster", pKIDParameter, actTypeParameter);
        }
    
        public virtual ObjectResult<getInputTypebyInputProdLinkMaster_Result> getInputTypebyInputProdLinkMaster(Nullable<decimal> inputFKID, string actType)
        {
            var inputFKIDParameter = inputFKID.HasValue ?
                new ObjectParameter("InputFKID", inputFKID) :
                new ObjectParameter("InputFKID", typeof(decimal));
    
            var actTypeParameter = actType != null ?
                new ObjectParameter("ActType", actType) :
                new ObjectParameter("ActType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInputTypebyInputProdLinkMaster_Result>("getInputTypebyInputProdLinkMaster", inputFKIDParameter, actTypeParameter);
        }
    
        public virtual ObjectResult<GetHolidayGroupLinkmasterByXml_Result> GetHolidayGroupLinkmasterByXml(Nullable<decimal> holidaygroupFKID)
        {
            var holidaygroupFKIDParameter = holidaygroupFKID.HasValue ?
                new ObjectParameter("HolidaygroupFKID", holidaygroupFKID) :
                new ObjectParameter("HolidaygroupFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHolidayGroupLinkmasterByXml_Result>("GetHolidayGroupLinkmasterByXml", holidaygroupFKIDParameter);
        }
    
        public virtual ObjectResult<GetMoleculeforProductPKIDByXMLNotInN_Result> GetMoleculeforProductPKIDByXMLNotInN(Nullable<int> productFKID)
        {
            var productFKIDParameter = productFKID.HasValue ?
                new ObjectParameter("ProductFKID", productFKID) :
                new ObjectParameter("ProductFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMoleculeforProductPKIDByXMLNotInN_Result>("GetMoleculeforProductPKIDByXMLNotInN", productFKIDParameter);
        }
    
        public virtual ObjectResult<USP_MoleculeProductMasterGrid_Result> USP_MoleculeProductMasterGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MoleculeProductMasterGrid_Result>("USP_MoleculeProductMasterGrid");
        }
    
        public virtual ObjectResult<GetTerritoryNameforDistrictByXml_Result> GetTerritoryNameforDistrictByXml(string districtFKID)
        {
            var districtFKIDParameter = districtFKID != null ?
                new ObjectParameter("DistrictFKID", districtFKID) :
                new ObjectParameter("DistrictFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerritoryNameforDistrictByXml_Result>("GetTerritoryNameforDistrictByXml", districtFKIDParameter);
        }
    
        public virtual ObjectResult<GetTerritoryNameforHQByXml_Result> GetTerritoryNameforHQByXml(string hQFKID)
        {
            var hQFKIDParameter = hQFKID != null ?
                new ObjectParameter("HQFKID", hQFKID) :
                new ObjectParameter("HQFKID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerritoryNameforHQByXml_Result>("GetTerritoryNameforHQByXml", hQFKIDParameter);
        }
    
        public virtual ObjectResult<GetLocationMaster_Result> GetLocationMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationMaster_Result>("GetLocationMaster");
        }
    
        public virtual ObjectResult<GetBrickforTerritoryByXml_Result> GetBrickforTerritoryByXml(Nullable<decimal> territoryFKID, Nullable<decimal> areaFKID)
        {
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            var areaFKIDParameter = areaFKID.HasValue ?
                new ObjectParameter("AreaFKID", areaFKID) :
                new ObjectParameter("AreaFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBrickforTerritoryByXml_Result>("GetBrickforTerritoryByXml", territoryFKIDParameter, areaFKIDParameter);
        }
    
        public virtual ObjectResult<GetCityNameForAreaXML_Result> GetCityNameForAreaXML(Nullable<decimal> areaFKID)
        {
            var areaFKIDParameter = areaFKID.HasValue ?
                new ObjectParameter("AreaFKID", areaFKID) :
                new ObjectParameter("AreaFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityNameForAreaXML_Result>("GetCityNameForAreaXML", areaFKIDParameter);
        }
    
        public virtual ObjectResult<GetCityNameforTerritoryByXML_Result> GetCityNameforTerritoryByXML(Nullable<decimal> territoryFKID, Nullable<decimal> areaFKID)
        {
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            var areaFKIDParameter = areaFKID.HasValue ?
                new ObjectParameter("AreaFKID", areaFKID) :
                new ObjectParameter("AreaFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityNameforTerritoryByXML_Result>("GetCityNameforTerritoryByXML", territoryFKIDParameter, areaFKIDParameter);
        }
    
        public virtual ObjectResult<GetTerritoryforBrickXml_Result> GetTerritoryforBrickXml(Nullable<decimal> territoryFKID)
        {
            var territoryFKIDParameter = territoryFKID.HasValue ?
                new ObjectParameter("TerritoryFKID", territoryFKID) :
                new ObjectParameter("TerritoryFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerritoryforBrickXml_Result>("GetTerritoryforBrickXml", territoryFKIDParameter);
        }
    
        public virtual ObjectResult<usp_Get_CampTypeMaster_Result2> usp_Get_CampTypeMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_CampTypeMaster_Result2>("usp_Get_CampTypeMaster");
        }
    
        public virtual ObjectResult<uspGetHolidayMaster_Result1> uspGetHolidayMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetHolidayMaster_Result1>("uspGetHolidayMaster");
        }
    
        public virtual ObjectResult<GetAllBrickDetailsByXML_Result> GetAllBrickDetailsByXML(Nullable<int> cityFKID)
        {
            var cityFKIDParameter = cityFKID.HasValue ?
                new ObjectParameter("CityFKID", cityFKID) :
                new ObjectParameter("CityFKID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBrickDetailsByXML_Result>("GetAllBrickDetailsByXML", cityFKIDParameter);
        }
    
        public virtual int sp_delete_Hospitaldetails(Nullable<int> hospitalId)
        {
            var hospitalIdParameter = hospitalId.HasValue ?
                new ObjectParameter("hospitalId", hospitalId) :
                new ObjectParameter("hospitalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_Hospitaldetails", hospitalIdParameter);
        }
    
        public virtual int sp_delete_Stockistdetails(Nullable<int> stockistId)
        {
            var stockistIdParameter = stockistId.HasValue ?
                new ObjectParameter("StockistId", stockistId) :
                new ObjectParameter("StockistId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_Stockistdetails", stockistIdParameter);
        }
    
        public virtual int sp_insert_hospitaldetails(string nameofHospital, string hotelAddress, string street, Nullable<int> city, Nullable<int> area, Nullable<decimal> zip, string phoneNumber, string email, Nullable<decimal> pSOFKID)
        {
            var nameofHospitalParameter = nameofHospital != null ?
                new ObjectParameter("NameofHospital", nameofHospital) :
                new ObjectParameter("NameofHospital", typeof(string));
    
            var hotelAddressParameter = hotelAddress != null ?
                new ObjectParameter("HotelAddress", hotelAddress) :
                new ObjectParameter("HotelAddress", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(decimal));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var pSOFKIDParameter = pSOFKID.HasValue ?
                new ObjectParameter("PSOFKID", pSOFKID) :
                new ObjectParameter("PSOFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_hospitaldetails", nameofHospitalParameter, hotelAddressParameter, streetParameter, cityParameter, areaParameter, zipParameter, phoneNumberParameter, emailParameter, pSOFKIDParameter);
        }
    
        public virtual int sp_insert_Stockistdetails(string nameofStockist, string stockistAddress, string street, Nullable<int> city, Nullable<int> area, Nullable<decimal> zip, string phoneNumber, string email, Nullable<decimal> pSOFKID)
        {
            var nameofStockistParameter = nameofStockist != null ?
                new ObjectParameter("NameofStockist", nameofStockist) :
                new ObjectParameter("NameofStockist", typeof(string));
    
            var stockistAddressParameter = stockistAddress != null ?
                new ObjectParameter("StockistAddress", stockistAddress) :
                new ObjectParameter("StockistAddress", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(decimal));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var pSOFKIDParameter = pSOFKID.HasValue ?
                new ObjectParameter("PSOFKID", pSOFKID) :
                new ObjectParameter("PSOFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_Stockistdetails", nameofStockistParameter, stockistAddressParameter, streetParameter, cityParameter, areaParameter, zipParameter, phoneNumberParameter, emailParameter, pSOFKIDParameter);
        }
    
        public virtual int sp_update_hospitaldetails(Nullable<int> hospitalId, string nameofHospital, string hotelAddress, string street, Nullable<int> city, Nullable<int> area, Nullable<decimal> zip, string phoneNumber, string email, string isActive)
        {
            var hospitalIdParameter = hospitalId.HasValue ?
                new ObjectParameter("HospitalId", hospitalId) :
                new ObjectParameter("HospitalId", typeof(int));
    
            var nameofHospitalParameter = nameofHospital != null ?
                new ObjectParameter("NameofHospital", nameofHospital) :
                new ObjectParameter("NameofHospital", typeof(string));
    
            var hotelAddressParameter = hotelAddress != null ?
                new ObjectParameter("HotelAddress", hotelAddress) :
                new ObjectParameter("HotelAddress", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(decimal));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_hospitaldetails", hospitalIdParameter, nameofHospitalParameter, hotelAddressParameter, streetParameter, cityParameter, areaParameter, zipParameter, phoneNumberParameter, emailParameter, isActiveParameter);
        }
    
        public virtual int sp_update_Stockistdetails(Nullable<int> stockistId, string nameofStockist, string stockistAddress, string street, Nullable<int> city, Nullable<int> area, Nullable<decimal> zip, string phoneNumber, string email, string isactive)
        {
            var stockistIdParameter = stockistId.HasValue ?
                new ObjectParameter("StockistId", stockistId) :
                new ObjectParameter("StockistId", typeof(int));
    
            var nameofStockistParameter = nameofStockist != null ?
                new ObjectParameter("NameofStockist", nameofStockist) :
                new ObjectParameter("NameofStockist", typeof(string));
    
            var stockistAddressParameter = stockistAddress != null ?
                new ObjectParameter("StockistAddress", stockistAddress) :
                new ObjectParameter("StockistAddress", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(int));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(decimal));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_Stockistdetails", stockistIdParameter, nameofStockistParameter, stockistAddressParameter, streetParameter, cityParameter, areaParameter, zipParameter, phoneNumberParameter, emailParameter, isactiveParameter);
        }
    
        public virtual ObjectResult<GetSpecializationMasterByPKID_Result> GetSpecializationMasterByPKID(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSpecializationMasterByPKID_Result>("GetSpecializationMasterByPKID", pKIDParameter);
        }
    
        public virtual ObjectResult<GetHospitalMaster_PSO_Result1> GetHospitalMaster_PSO(Nullable<decimal> pSOFKID)
        {
            var pSOFKIDParameter = pSOFKID.HasValue ?
                new ObjectParameter("PSOFKID", pSOFKID) :
                new ObjectParameter("PSOFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHospitalMaster_PSO_Result1>("GetHospitalMaster_PSO", pSOFKIDParameter);
        }
    
        public virtual ObjectResult<GetStockistMaster_PSO_Result1> GetStockistMaster_PSO(Nullable<decimal> pSOFKID)
        {
            var pSOFKIDParameter = pSOFKID.HasValue ?
                new ObjectParameter("PSOFKID", pSOFKID) :
                new ObjectParameter("PSOFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStockistMaster_PSO_Result1>("GetStockistMaster_PSO", pSOFKIDParameter);
        }
    
        public virtual ObjectResult<GetSplSelectedTeamByXml_Result> GetSplSelectedTeamByXml(Nullable<decimal> pKID)
        {
            var pKIDParameter = pKID.HasValue ?
                new ObjectParameter("PKID", pKID) :
                new ObjectParameter("PKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSplSelectedTeamByXml_Result>("GetSplSelectedTeamByXml", pKIDParameter);
        }
    
        public virtual ObjectResult<GetLinkUserTeamMasterforDrpuserfillByXml_Result1> GetLinkUserTeamMasterforDrpuserfillByXml(Nullable<decimal> teamFKID, Nullable<decimal> nodeTypeFKID)
        {
            var teamFKIDParameter = teamFKID.HasValue ?
                new ObjectParameter("TeamFKID", teamFKID) :
                new ObjectParameter("TeamFKID", typeof(decimal));
    
            var nodeTypeFKIDParameter = nodeTypeFKID.HasValue ?
                new ObjectParameter("NodeTypeFKID", nodeTypeFKID) :
                new ObjectParameter("NodeTypeFKID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLinkUserTeamMasterforDrpuserfillByXml_Result1>("GetLinkUserTeamMasterforDrpuserfillByXml", teamFKIDParameter, nodeTypeFKIDParameter);
        }
    }
}
